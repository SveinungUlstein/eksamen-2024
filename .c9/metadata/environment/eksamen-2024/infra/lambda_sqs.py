{"filter":false,"title":"lambda_sqs.py","tooltip":"/eksamen-2024/infra/lambda_sqs.py","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":20,"column":24},"end":{"row":20,"column":32},"action":"remove","lines":["f\"images"],"id":16},{"start":{"row":20,"column":24},"end":{"row":20,"column":46},"action":"insert","lines":["pgr301-couch-explorers"]}],[{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"insert","lines":["'"],"id":17}],[{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"remove","lines":["'"],"id":18}],[{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"insert","lines":["\\"],"id":19}],[{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"remove","lines":["\\"],"id":20}],[{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"insert","lines":["/"],"id":21}],[{"start":{"row":20,"column":47},"end":{"row":20,"column":48},"action":"insert","lines":["2"],"id":22},{"start":{"row":20,"column":48},"end":{"row":20,"column":49},"action":"insert","lines":["7"]}],[{"start":{"row":20,"column":24},"end":{"row":20,"column":25},"action":"insert","lines":["\""],"id":23}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["import base64","import boto3","import json","import random","import os","","# Frank; This is probalby be closer to what we need in production. Let's get funding first!","","bedrock_client = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")","s3_client = boto3.client(\"s3\")","","MODEL_ID = \"amazon.titan-image-generator-v1\"","BUCKET_NAME =  os.environ[\"BUCKET_NAME\"]","","def lambda_handler(event, context):","    # Loop through all SQS records in the event","    for record in event[\"Records\"]:","        # Extract the SQS message body","        prompt = record[\"body\"]","        seed = random.randint(0, 2147483647)","        s3_image_path = f\"27/titan_{seed}.png\"","        # Prepare the request for image generation","        native_request = {","            \"taskType\": \"TEXT_IMAGE\",","            \"textToImageParams\": {\"text\": prompt},","            \"imageGenerationConfig\": {","                \"numberOfImages\": 1,","                \"quality\": \"standard\",","                \"cfgScale\": 8.0,","                \"height\": 512,","                \"width\": 512,","                \"seed\": seed,","            },","        }","","        # Invoke the model","        response = bedrock_client.invoke_model(","            modelId=MODEL_ID,","            body=json.dumps(native_request)","        )","","        model_response = json.loads(response[\"body\"].read())","        base64_image_data = model_response[\"images\"][0]","        image_data = base64.b64decode(base64_image_data)","","        # Upload the image to S3","        s3_client.put_object(Bucket=BUCKET_NAME, Key=s3_image_path, Body=image_data)","","    return {","        \"statusCode\": 200,","        \"body\": json.dumps(\"\")","    }",""],"id":26}]]},"ace":{"folds":[],"scrolltop":200,"scrollleft":0,"selection":{"start":{"row":52,"column":0},"end":{"row":52,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1732531648935,"hash":"4f4f3e79e3741a0567c80445b03f5a54734b6951"}