{"changed":true,"filter":false,"title":"app.py","tooltip":"/eksamen_2024_27/hello_world/app.py","value":"import base64\nimport boto3\nimport json\nimport random\nimport os\n\n\nbucket = os.environ['BUCKET']\nbedrock_client = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")\ns3_client = boto3.client(\"s3\")\n\ndef lambda_handler(event, context):\n    model_id = \"amazon.titan-image-generator-v1\"\n\n    body = json.loads(event[\"body\"])\n    prompt = body.get(\"prompt\")\n    seed= random.randint(0,2147483647)\n    s3_image_path = f\"27/titan{seed}.png\"\n\n\n    native_request = {\n        \"taskType\": \"TEXT_IMAGE\",\n        \"textToImageParams\": {\"text\": prompt},\n        \"imageGenerationConfig\": {\n            \"numberOfImages\": 1,\n            \"quality\": \"standard\",\n            \"cfgScale\": 8.0,\n            \"height\": 1024,\n            \"width\": 1024,\n            \"seed\": seed,\n        }\n    }\n\n    try:\n        response = bedrock_client.invoke_model(modelId=model_id, body=json.dumps(native_request))\n        model_response = json.loads(response[\"body\"].read())\n\n        base64_image_data = model_response[\"images\"][0]\n        image_data = base64.b64decode(base64_image_data)\n\n        s3_client.put_object(Bucket=bucket, Key=s3_image_path, Body=image_data)\n        return {\n            \"statusCode\": 200,\n            \"body\": json.dumps({\n                \"message\": \"ok\",\n                \"s3_image_path\": f\"s3://{bucket}/{s3_image_path}\",\n                \"prompt\": prompt\n            })\n        }\n\n    except Exception as e:\n        return {\n            \"statusCode\": 500,\n            \"body\": json.dumps({\n                \"message\": \"not ok \",\n                \"error\": str(e)\n            })\n        }\n","undoManager":{"mark":53,"position":53,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["import json","","# import requests","","","def lambda_handler(event, context):","    \"\"\"Sample pure Lambda function","","    Parameters","    ----------","    event: dict, required","        API Gateway Lambda Proxy Input Format","","        Event doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format","","    context: object, required","        Lambda Context runtime methods and attributes","","        Context doc: https://docs.aws.amazon.com/lambda/latest/dg/python-context-object.html","","    Returns","    ------","    API Gateway Lambda Proxy Output Format: dict","","        Return doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html","    \"\"\"","","    # try:","    #     ip = requests.get(\"http://checkip.amazonaws.com/\")","    # except requests.RequestException as e:","    #     # Send some context about this error to Lambda Logs","    #     print(e)","","    #     raise e","","    return {","        \"statusCode\": 200,","        \"body\": json.dumps({","            \"message\": \"hello world\",","            # \"location\": ip.text.replace(\"\\n\", \"\")","        }),","    }",""],"id":111}],[{"start":{"row":0,"column":0},"end":{"row":41,"column":76},"action":"insert","lines":["import base64","import boto3","import json","import random","","# Set up the AWS clients","","bedrock_client = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")","s3_client = boto3.client(\"s3\")","","# Define the model ID and S3 bucket name (replace with your actual bucket name)","model_id = \"amazon.titan-image-generator-v1\"","bucket_name = \"pgr301-couch-explorers\"","","# Frank; Important; Change this prompt to something else before the presentation with the investors!","prompt = \"Investors, with circus hats, giving money to developers with large smiles\"","","seed = random.randint(0, 2147483647)","s3_image_path = f\"generated_images/titan_{seed}.png\"","","native_request = {","    \"taskType\": \"TEXT_IMAGE\",","    \"textToImageParams\": {\"text\": prompt},","    \"imageGenerationConfig\": {","        \"numberOfImages\": 1,","        \"quality\": \"standard\",","        \"cfgScale\": 8.0,","        \"height\": 1024,","        \"width\": 1024,","        \"seed\": seed,","    }","}","","response = bedrock_client.invoke_model(modelId=model_id, body=json.dumps(native_request))","model_response = json.loads(response[\"body\"].read())","","# Extract and decode the Base64 image data","base64_image_data = model_response[\"images\"][0]","image_data = base64.b64decode(base64_image_data)","","# Upload the decoded image data to S3","s3_client.put_object(Bucket=bucket_name, Key=s3_image_path, Body=image_data)"],"id":112}],[{"start":{"row":10,"column":79},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":113}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":["d"],"id":114},{"start":{"row":11,"column":1},"end":{"row":11,"column":2},"action":"insert","lines":["e"]},{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["a"]},{"start":{"row":11,"column":3},"end":{"row":11,"column":4},"action":"insert","lines":["f"]}],[{"start":{"row":11,"column":3},"end":{"row":11,"column":4},"action":"remove","lines":["f"],"id":115},{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"remove","lines":["a"]}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["f"],"id":116}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"remove","lines":["f"],"id":117}],[{"start":{"row":11,"column":2},"end":{"row":11,"column":3},"action":"insert","lines":["f"],"id":118}],[{"start":{"row":11,"column":3},"end":{"row":11,"column":4},"action":"insert","lines":[" "],"id":119},{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":["l"]},{"start":{"row":11,"column":5},"end":{"row":11,"column":6},"action":"insert","lines":["a"]}],[{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["m"],"id":120},{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":["b"]},{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["d"]},{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["a"]}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":[" "],"id":121}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"remove","lines":[" "],"id":122}],[{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":["_"],"id":123}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":[" "],"id":124}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"remove","lines":[" "],"id":125}],[{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["h"],"id":126},{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":["a"]},{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":["n"]},{"start":{"row":11,"column":14},"end":{"row":11,"column":15},"action":"insert","lines":["d"]},{"start":{"row":11,"column":15},"end":{"row":11,"column":16},"action":"insert","lines":["l"]},{"start":{"row":11,"column":16},"end":{"row":11,"column":17},"action":"insert","lines":["e"]},{"start":{"row":11,"column":17},"end":{"row":11,"column":18},"action":"insert","lines":["r"]}],[{"start":{"row":11,"column":18},"end":{"row":11,"column":20},"action":"insert","lines":["()"],"id":127}],[{"start":{"row":11,"column":19},"end":{"row":11,"column":20},"action":"insert","lines":["e"],"id":128},{"start":{"row":11,"column":20},"end":{"row":11,"column":21},"action":"insert","lines":["v"]},{"start":{"row":11,"column":21},"end":{"row":11,"column":22},"action":"insert","lines":["e"]},{"start":{"row":11,"column":22},"end":{"row":11,"column":23},"action":"insert","lines":["n"]},{"start":{"row":11,"column":23},"end":{"row":11,"column":24},"action":"insert","lines":["t"]},{"start":{"row":11,"column":24},"end":{"row":11,"column":25},"action":"insert","lines":[","]}],[{"start":{"row":11,"column":25},"end":{"row":11,"column":26},"action":"insert","lines":[" "],"id":129},{"start":{"row":11,"column":26},"end":{"row":11,"column":27},"action":"insert","lines":["e"]},{"start":{"row":11,"column":27},"end":{"row":11,"column":28},"action":"insert","lines":["x"]},{"start":{"row":11,"column":28},"end":{"row":11,"column":29},"action":"insert","lines":["p"]},{"start":{"row":11,"column":29},"end":{"row":11,"column":30},"action":"insert","lines":["r"]},{"start":{"row":11,"column":30},"end":{"row":11,"column":31},"action":"insert","lines":["e"]},{"start":{"row":11,"column":31},"end":{"row":11,"column":32},"action":"insert","lines":["s"]},{"start":{"row":11,"column":32},"end":{"row":11,"column":33},"action":"insert","lines":["s"]},{"start":{"row":11,"column":33},"end":{"row":11,"column":34},"action":"insert","lines":["i"]}],[{"start":{"row":11,"column":34},"end":{"row":11,"column":35},"action":"insert","lines":["o"],"id":130},{"start":{"row":11,"column":35},"end":{"row":11,"column":36},"action":"insert","lines":["n"]}],[{"start":{"row":11,"column":26},"end":{"row":11,"column":36},"action":"remove","lines":["expression"],"id":131},{"start":{"row":11,"column":26},"end":{"row":11,"column":27},"action":"insert","lines":["c"]},{"start":{"row":11,"column":27},"end":{"row":11,"column":28},"action":"insert","lines":["o"]},{"start":{"row":11,"column":28},"end":{"row":11,"column":29},"action":"insert","lines":["n"]},{"start":{"row":11,"column":29},"end":{"row":11,"column":30},"action":"insert","lines":["t"]},{"start":{"row":11,"column":30},"end":{"row":11,"column":31},"action":"insert","lines":["e"]},{"start":{"row":11,"column":31},"end":{"row":11,"column":32},"action":"insert","lines":["x"]},{"start":{"row":11,"column":32},"end":{"row":11,"column":33},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "],"id":132}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "],"id":133}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "],"id":134}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "],"id":135}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "],"id":136}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "],"id":137}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "],"id":138}],[{"start":{"row":22,"column":4},"end":{"row":22,"column":8},"action":"insert","lines":["    "],"id":139}],[{"start":{"row":23,"column":4},"end":{"row":23,"column":8},"action":"insert","lines":["    "],"id":140}],[{"start":{"row":24,"column":4},"end":{"row":24,"column":8},"action":"insert","lines":["    "],"id":141}],[{"start":{"row":25,"column":8},"end":{"row":25,"column":12},"action":"insert","lines":["    "],"id":142}],[{"start":{"row":26,"column":8},"end":{"row":26,"column":12},"action":"insert","lines":["    "],"id":143}],[{"start":{"row":27,"column":8},"end":{"row":27,"column":12},"action":"insert","lines":["    "],"id":144}],[{"start":{"row":28,"column":8},"end":{"row":28,"column":12},"action":"insert","lines":["    "],"id":145}],[{"start":{"row":29,"column":8},"end":{"row":29,"column":12},"action":"insert","lines":["    "],"id":146}],[{"start":{"row":30,"column":8},"end":{"row":30,"column":12},"action":"insert","lines":["    "],"id":147}],[{"start":{"row":31,"column":4},"end":{"row":31,"column":8},"action":"insert","lines":["    "],"id":148}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "],"id":149}],[{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "],"id":150}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "],"id":151}],[{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "],"id":152}],[{"start":{"row":38,"column":0},"end":{"row":38,"column":4},"action":"insert","lines":["    "],"id":153}],[{"start":{"row":39,"column":0},"end":{"row":39,"column":4},"action":"insert","lines":["    "],"id":154}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":4},"action":"insert","lines":["    "],"id":155}],[{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"insert","lines":["    "],"id":156}],[{"start":{"row":11,"column":38},"end":{"row":11,"column":39},"action":"insert","lines":[":"],"id":157}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":80},"action":"remove","lines":["import base64","import boto3","import json","import random","","# Set up the AWS clients","","bedrock_client = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")","s3_client = boto3.client(\"s3\")","","# Define the model ID and S3 bucket name (replace with your actual bucket name)","    def lambda_handler(event, context):","    model_id = \"amazon.titan-image-generator-v1\"","    bucket_name = \"pgr301-couch-explorers\"","","# Frank; Important; Change this prompt to something else before the presentation with the investors!","    prompt = \"Investors, with circus hats, giving money to developers with large smiles\"","","    seed = random.randint(0, 2147483647)","    s3_image_path = f\"generated_images/titan_{seed}.png\"","","    native_request = {","        \"taskType\": \"TEXT_IMAGE\",","        \"textToImageParams\": {\"text\": prompt},","        \"imageGenerationConfig\": {","            \"numberOfImages\": 1,","            \"quality\": \"standard\",","            \"cfgScale\": 8.0,","            \"height\": 1024,","            \"width\": 1024,","            \"seed\": seed,","        }","    }","","    response = bedrock_client.invoke_model(modelId=model_id, body=json.dumps(native_request))","    model_response = json.loads(response[\"body\"].read())","","    # Extract and decode the Base64 image data","    base64_image_data = model_response[\"images\"][0]","    image_data = base64.b64decode(base64_image_data)","","    # Upload the decoded image data to S3","    s3_client.put_object(Bucket=bucket_name, Key=s3_image_path, Body=image_data)"],"id":158},{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["import base64","import boto3","import json","import random","import os","","","bucket = os.environ['BUCKET']","bedrockclient = boto3.client(\"bedrock-runtime\", region_name=\"us-east-1\")","s3_client = boto3.client(\"s3\")","","def lambda_handler(event, context):","    model_id = \"amazon.titan-image-generator-v1\"","","    body = json.loads(event[\"body\"])","    prompt = body.get(\"prompt\")","    seed= random.randint(0,2147483647)","    s3_image_path = f\"4/titan{seed}.png\"","","","    native_request = {","        \"taskType\": \"TEXT_IMAGE\",","        \"textToImageParams\": {\"text\": prompt},","        \"imageGenerationConfig\": {","            \"numberOfImages\": 1,","            \"quality\": \"standard\",","            \"cfgScale\": 8.0,","            \"height\": 1024,","            \"width\": 1024,","            \"seed\": seed,","        }","    }","","    try:","        response = bedrock_client.invoke_model(modelId=model_id, body=json.dumps(native_request))","        model_response = json.loads(response[\"body\"].read())","","        base64_image_data = model_response[\"images\"][0]","        image_data = base64.b64decode(base64_image_data)","","        s3_client.put_object(Bucket=bucket, Key=s3_image_path, Body=image_data)","        return {","            \"statusCode\": 200,","            \"body\": json.dumps({","                \"message\": \"YIPPIEEEE :3\",","                \"s3_image_path\": f\"s3://{bucket}/{s3_image_path}\",","                \"prompt\": prompt","            })","        }","","    except Exception as e:","        return {","            \"statusCode\": 500,","            \"body\": json.dumps({","                \"message\": \"lol you suck :3 \",","                \"error\": str(e)","            })","        }",""]}],[{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"insert","lines":["_"],"id":159}],[{"start":{"row":44,"column":28},"end":{"row":44,"column":40},"action":"remove","lines":["YIPPIEEEE :3"],"id":160},{"start":{"row":44,"column":28},"end":{"row":44,"column":29},"action":"insert","lines":["o"]},{"start":{"row":44,"column":29},"end":{"row":44,"column":30},"action":"insert","lines":["k"]}],[{"start":{"row":54,"column":28},"end":{"row":54,"column":43},"action":"remove","lines":["lol you suck :3"],"id":161},{"start":{"row":54,"column":28},"end":{"row":54,"column":29},"action":"insert","lines":["n"]},{"start":{"row":54,"column":29},"end":{"row":54,"column":30},"action":"insert","lines":["o"]},{"start":{"row":54,"column":30},"end":{"row":54,"column":31},"action":"insert","lines":["t"]}],[{"start":{"row":54,"column":31},"end":{"row":54,"column":32},"action":"insert","lines":[" "],"id":162},{"start":{"row":54,"column":32},"end":{"row":54,"column":33},"action":"insert","lines":["o"]},{"start":{"row":54,"column":33},"end":{"row":54,"column":34},"action":"insert","lines":["k"]}],[{"start":{"row":17,"column":22},"end":{"row":17,"column":23},"action":"remove","lines":["4"],"id":163}],[{"start":{"row":17,"column":22},"end":{"row":17,"column":23},"action":"insert","lines":["2"],"id":164},{"start":{"row":17,"column":23},"end":{"row":17,"column":24},"action":"insert","lines":["7"]}],[{"start":{"row":57,"column":9},"end":{"row":57,"column":10},"action":"insert","lines":["y"],"id":165}]]},"ace":{"folds":[],"scrolltop":320,"scrollleft":0,"selection":{"start":{"row":58,"column":0},"end":{"row":58,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1732110426821}