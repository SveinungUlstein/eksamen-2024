{"filter":false,"title":"template.yaml","tooltip":"/eksamen_2024_27/template.yaml","undoManager":{"mark":21,"position":21,"stack":[[{"start":{"row":29,"column":23},"end":{"row":29,"column":24},"action":"remove","lines":["o"],"id":27},{"start":{"row":29,"column":22},"end":{"row":29,"column":23},"action":"remove","lines":["l"]},{"start":{"row":29,"column":21},"end":{"row":29,"column":22},"action":"remove","lines":["l"]},{"start":{"row":29,"column":20},"end":{"row":29,"column":21},"action":"remove","lines":["e"]},{"start":{"row":29,"column":19},"end":{"row":29,"column":20},"action":"remove","lines":["h"]}],[{"start":{"row":29,"column":19},"end":{"row":29,"column":20},"action":"insert","lines":["s"],"id":28},{"start":{"row":29,"column":20},"end":{"row":29,"column":21},"action":"insert","lines":["a"]},{"start":{"row":29,"column":21},"end":{"row":29,"column":22},"action":"insert","lines":["m"]}],[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"insert","lines":["]"],"id":29}],[{"start":{"row":16,"column":11},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":30}],[{"start":{"row":16,"column":11},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":31},{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"remove","lines":["]"]}],[{"start":{"row":16,"column":10},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":32}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":1},"action":"insert","lines":["p"],"id":33},{"start":{"row":17,"column":1},"end":{"row":17,"column":2},"action":"insert","lines":["o"]},{"start":{"row":17,"column":2},"end":{"row":17,"column":3},"action":"insert","lines":["l"]}],[{"start":{"row":17,"column":2},"end":{"row":17,"column":3},"action":"remove","lines":["l"],"id":34},{"start":{"row":17,"column":1},"end":{"row":17,"column":2},"action":"remove","lines":["o"]},{"start":{"row":17,"column":0},"end":{"row":17,"column":1},"action":"remove","lines":["p"]}],[{"start":{"row":16,"column":10},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":35}],[{"start":{"row":16,"column":10},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":36}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":2},"action":"insert","lines":["  "],"id":37}],[{"start":{"row":17,"column":2},"end":{"row":17,"column":3},"action":"insert","lines":["B"],"id":38},{"start":{"row":17,"column":3},"end":{"row":17,"column":4},"action":"insert","lines":["C"]},{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"insert","lines":["U"]}],[{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"remove","lines":["U"],"id":39},{"start":{"row":17,"column":3},"end":{"row":17,"column":4},"action":"remove","lines":["C"]}],[{"start":{"row":17,"column":3},"end":{"row":17,"column":4},"action":"insert","lines":["U"],"id":40},{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"insert","lines":["C"]},{"start":{"row":17,"column":5},"end":{"row":17,"column":6},"action":"insert","lines":["K"]},{"start":{"row":17,"column":6},"end":{"row":17,"column":7},"action":"insert","lines":["E"]},{"start":{"row":17,"column":7},"end":{"row":17,"column":8},"action":"insert","lines":["T"]}],[{"start":{"row":17,"column":7},"end":{"row":17,"column":8},"action":"remove","lines":["T"],"id":41},{"start":{"row":17,"column":6},"end":{"row":17,"column":7},"action":"remove","lines":["E"]},{"start":{"row":17,"column":5},"end":{"row":17,"column":6},"action":"remove","lines":["K"]},{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"remove","lines":["C"]},{"start":{"row":17,"column":3},"end":{"row":17,"column":4},"action":"remove","lines":["U"]},{"start":{"row":17,"column":2},"end":{"row":17,"column":3},"action":"remove","lines":["B"]}],[{"start":{"row":17,"column":2},"end":{"row":29,"column":99},"action":"insert","lines":[" Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - Statement:","            - Effect: Allow","              Action: ","                - s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*","            - Effect: Allow","              Action:","                - bedrock:InvokeModel","              Resource: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-image-generator-v1"],"id":42}],[{"start":{"row":0,"column":0},"end":{"row":58,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  eksamen_2024_27","","  Sample SAM Template for eksamen_2024_27","","# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst","Globals:","  Function:","    Timeout: 3","    MemorySize: 128","","    Tracing: Active","  Api:","    TracingEnabled: true","Resources:","   Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - Statement:","            - Effect: Allow","              Action: ","                - s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*","            - Effect: Allow","              Action:","                - bedrock:InvokeModel","              Resource: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-image-generator-v1","  HelloWorldFunction:","    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction","    Properties:","      CodeUri: hello_world/","      Handler: app.lambda_handler","      Runtime: python3.9","      Architectures:","      - x86_64","      Events:","        HelloWorld:","          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api","          Properties:","            Path: /sam","            Method: get","","Outputs:","  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function","  # Find out more about other implicit resources you can reference within SAM","  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api","  HelloWorldApi:","    Description: API Gateway endpoint URL for Prod stage for Hello World function","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/\"","  HelloWorldFunction:","    Description: Hello World Lambda Function ARN","    Value: !GetAtt HelloWorldFunction.Arn","  HelloWorldFunctionIamRole:","    Description: Implicit IAM Role created for Hello World function","    Value: !GetAtt HelloWorldFunctionRole.Arn",""],"id":43}],[{"start":{"row":0,"column":0},"end":{"row":48,"column":50},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  SAM Template for Image Generation Lambda Function","  ","Globals:","  Function:","    Timeout: 60","    MemorySize: 500","","Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - Statement:","            - Effect: Allow","              Action: ","                - s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*","            - Effect: Allow","              Action:","                - bedrock:InvokeModel","              Resource: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-image-generator-v1","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post   ","","Outputs:","  ImageGenerationApi:","    Description: \"API Gateway endpoint URL for image generation function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/\"","  ImageGenerationFunction:","    Description: \"Image Generation Lambda Function ARN\"","    Value: !GetAtt ImageGenerationFunction.Arn","  ImageGenerationFunctionIamRole:","    Description: \"Implicit IAM Role created for image generation function\"","    Value: !GetAtt ImageGenerationFunctionRole.Arn"],"id":44}],[{"start":{"row":37,"column":24},"end":{"row":37,"column":25},"action":"remove","lines":[" "],"id":45}],[{"start":{"row":37,"column":24},"end":{"row":37,"column":26},"action":"remove","lines":["  "],"id":46},{"start":{"row":37,"column":24},"end":{"row":38,"column":0},"action":"insert","lines":["",""]},{"start":{"row":38,"column":0},"end":{"row":38,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":38,"column":12},"end":{"row":43,"column":26},"action":"insert","lines":["RestApiId:","              Ref: ServerlessRestApi","            StageName: Prod","            EndpointConfiguration:","              Types:","                - REGIONAL"],"id":47}],[{"start":{"row":0,"column":0},"end":{"row":54,"column":50},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  SAM Template for Image Generation Lambda Function","  ","Globals:","  Function:","    Timeout: 60","    MemorySize: 500","","Resources:","  ImageGenerationFunction:  ","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: hello_world/  ","      Handler: app.lambda_handler  ","      Runtime: python3.9","      Architectures:","        - x86_64","      Environment:","        Variables:","          BUCKET: pgr301-couch-explorers","      Policies:","        - Statement:","            - Effect: Allow","              Action: ","                - s3:PutObject","              Resource: arn:aws:s3:::pgr301-couch-explorers/*","            - Effect: Allow","              Action:","                - bedrock:InvokeModel","              Resource: arn:aws:bedrock:us-east-1::foundation-model/amazon.titan-image-generator-v1","      Events:","        ImageGenerationApi:  ","          Type: Api","          Properties:","            Path: /generate-image  ","            Method: post","            RestApiId:","              Ref: ServerlessRestApi","            StageName: Prod","            EndpointConfiguration:","              Types:","                - REGIONAL","","Outputs:","  ImageGenerationApi:","    Description: \"API Gateway endpoint URL for image generation function\"","    Value: !Sub \"https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/generate-image/\"","  ImageGenerationFunction:","    Description: \"Image Generation Lambda Function ARN\"","    Value: !GetAtt ImageGenerationFunction.Arn","  ImageGenerationFunctionIamRole:","    Description: \"Implicit IAM Role created for image generation function\"","    Value: !GetAtt ImageGenerationFunctionRole.Arn"],"id":48},{"start":{"row":0,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: Simple SAM Template","","Globals:","  Function:","    Timeout: 60","    MemorySize: 128","","Resources:","  SimpleLambdaFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: ./hello_world/","      Handler: app.lambda_handler","      Runtime: python3.9",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":16,"column":0},"end":{"row":16,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1732191876575,"hash":"9d48a7be5fbf0af493448044d29f9ec9e7d6fd6f"}